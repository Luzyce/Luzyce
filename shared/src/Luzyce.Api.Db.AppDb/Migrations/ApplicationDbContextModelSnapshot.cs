// <auto-generated />
using System;
using Luzyce.Api.Db.AppDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Luzyce.Api.Db.AppDb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.CustomerLampshade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerSymbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LampshadeDekor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LampshadeId")
                        .HasColumnType("int");

                    b.Property<int>("LampshadeNormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LampshadeId");

                    b.HasIndex("LampshadeNormId");

                    b.ToTable("CustomerLampshades");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DocNumber")
                        .HasColumnType("int");

                    b.Property<int>("DocumentsDefinitionId")
                        .HasColumnType("int");

                    b.Property<int?>("LockedById")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("po_OrderId");

                    b.Property<int?>("ProductionPlanPositionsId")
                        .HasColumnType("int")
                        .HasColumnName("kw_ProductionPlanPositionsId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentsDefinitionId");

                    b.HasIndex("LockedById");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductionPlanPositionsId");

                    b.HasIndex("StatusId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentItemRelationships", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NetQuantityParent")
                        .HasColumnType("int");

                    b.Property<int>("ParentDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("ParentPositionId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityLossParent")
                        .HasColumnType("int");

                    b.Property<int>("SubordinateDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("SubordinatePositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentDocumentId");

                    b.HasIndex("ParentPositionId");

                    b.HasIndex("SubordinateDocumentId");

                    b.HasIndex("SubordinatePositionId");

                    b.ToTable("DocumentItemRelationships");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentPositions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LampshadeDekor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LampshadeId")
                        .HasColumnType("int");

                    b.Property<int?>("LampshadeNormId")
                        .HasColumnType("int");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderPositionForProductionId")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("po_Priority");

                    b.Property<int>("QuantityGross")
                        .HasColumnType("int");

                    b.Property<int>("QuantityLoss")
                        .HasColumnType("int");

                    b.Property<int>("QuantityNetto")
                        .HasColumnType("int");

                    b.Property<int>("QuantityToImprove")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SubiektProductId")
                        .HasColumnType("int")
                        .HasColumnName("po_SubiektProductId");

                    b.Property<decimal?>("po_NumberOfChanges")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("po_QuantityMade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("LampshadeId");

                    b.HasIndex("LampshadeNormId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrderPositionForProductionId");

                    b.ToTable("DocumentPositions");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentRelations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ParentDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("SubordinateDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentDocumentId");

                    b.HasIndex("SubordinateDocumentId");

                    b.ToTable("DocumentRelations");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentsDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DocumentsDefinitions", t =>
                        {
                            t.HasCheckConstraint("CK_DocumentsDefinitions_Code_MinLength", "LENGTH(`Code`) >= 1");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KW",
                            Name = "Kwit"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ZP",
                            Name = "Zlecenie Produkcji"
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Errors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "00",
                            Name = "INNE",
                            ShortName = "INN"
                        },
                        new
                        {
                            Id = 2,
                            Code = "01",
                            Name = "KAMIENIE",
                            ShortName = "KAM"
                        },
                        new
                        {
                            Id = 3,
                            Code = "02",
                            Name = "KRĘTE",
                            ShortName = "KR"
                        },
                        new
                        {
                            Id = 4,
                            Code = "03",
                            Name = "GISZPA",
                            ShortName = "GIS"
                        },
                        new
                        {
                            Id = 5,
                            Code = "04",
                            Name = "PLADRY W SZKLE",
                            ShortName = "PLS"
                        },
                        new
                        {
                            Id = 6,
                            Code = "05",
                            Name = "PLADRY Z NABIERANIA",
                            ShortName = "PLN"
                        },
                        new
                        {
                            Id = 7,
                            Code = "06",
                            Name = "PLADRY PĘKAJĄCE",
                            ShortName = "PLP"
                        },
                        new
                        {
                            Id = 8,
                            Code = "07",
                            Name = "PLADRY OPALOWE",
                            ShortName = "PLO"
                        },
                        new
                        {
                            Id = 9,
                            Code = "08",
                            Name = "SMUGI",
                            ShortName = "SMU"
                        },
                        new
                        {
                            Id = 10,
                            Code = "09",
                            Name = "PASY",
                            ShortName = "PAS"
                        },
                        new
                        {
                            Id = 11,
                            Code = "10",
                            Name = "JASNE",
                            ShortName = "JAS"
                        },
                        new
                        {
                            Id = 12,
                            Code = "11",
                            Name = "RAUCH",
                            ShortName = "RAU"
                        },
                        new
                        {
                            Id = 13,
                            Code = "12",
                            Name = "NAGAR",
                            ShortName = "NAG"
                        },
                        new
                        {
                            Id = 14,
                            Code = "13",
                            Name = "POPĘKANE",
                            ShortName = "POP"
                        },
                        new
                        {
                            Id = 15,
                            Code = "14",
                            Name = "ZIMNA FORMA",
                            ShortName = "ZFO"
                        },
                        new
                        {
                            Id = 16,
                            Code = "15",
                            Name = "BRUDNA FORMA",
                            ShortName = "BFO"
                        },
                        new
                        {
                            Id = 17,
                            Code = "16",
                            Name = "BRUDNY BURGULEC",
                            ShortName = "BBU"
                        },
                        new
                        {
                            Id = 18,
                            Code = "17",
                            Name = "ZENDRA",
                            ShortName = "ZEN"
                        },
                        new
                        {
                            Id = 19,
                            Code = "18",
                            Name = "PRZERWANE SZKŁO",
                            ShortName = "PRS"
                        },
                        new
                        {
                            Id = 20,
                            Code = "19",
                            Name = "POMARSZCZONE",
                            ShortName = "POM"
                        },
                        new
                        {
                            Id = 21,
                            Code = "20",
                            Name = "SKALECZONE",
                            ShortName = "SKA"
                        },
                        new
                        {
                            Id = 22,
                            Code = "21",
                            Name = "ROZBERNA BAŃKA",
                            ShortName = "RBA"
                        },
                        new
                        {
                            Id = 23,
                            Code = "22",
                            Name = "CIENKIE",
                            ShortName = "CIE"
                        },
                        new
                        {
                            Id = 24,
                            Code = "23",
                            Name = "GRUBE",
                            ShortName = "GRU"
                        },
                        new
                        {
                            Id = 25,
                            Code = "24",
                            Name = "PŁASKIE",
                            ShortName = "PŁA"
                        },
                        new
                        {
                            Id = 26,
                            Code = "25",
                            Name = "PRZEDMUCHANE",
                            ShortName = "PRZ"
                        },
                        new
                        {
                            Id = 27,
                            Code = "26",
                            Name = "NIEDODMUCHANE",
                            ShortName = "NDO"
                        },
                        new
                        {
                            Id = 28,
                            Code = "27",
                            Name = "WYCIĄGNIĘTE",
                            ShortName = "WYC"
                        },
                        new
                        {
                            Id = 29,
                            Code = "28",
                            Name = "ZAPCHANE",
                            ShortName = "ZAP"
                        },
                        new
                        {
                            Id = 30,
                            Code = "29",
                            Name = "FRETY",
                            ShortName = "FRE"
                        },
                        new
                        {
                            Id = 31,
                            Code = "30",
                            Name = "RYGLE",
                            ShortName = "RYG"
                        },
                        new
                        {
                            Id = 32,
                            Code = "31",
                            Name = "ZATARTE",
                            ShortName = "ZAT"
                        },
                        new
                        {
                            Id = 33,
                            Code = "32",
                            Name = "PRZYPALONE",
                            ShortName = "PRZ"
                        },
                        new
                        {
                            Id = 34,
                            Code = "33",
                            Name = "POPĘKANE NA PALNIKU",
                            ShortName = "PNP"
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.KwitLack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KwitId")
                        .HasColumnType("int");

                    b.Property<int>("LackId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KwitId");

                    b.HasIndex("LackId");

                    b.ToTable("KwitLacks");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Lampshade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lampshades");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.LampshadeNorm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LampshadeId")
                        .HasColumnType("int");

                    b.Property<string>("MethodOfPackaging")
                        .HasColumnType("longtext");

                    b.Property<int?>("QuantityPerChange")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityPerPack")
                        .HasColumnType("int");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeightBrutto")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("WeightNetto")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("LampshadeId");

                    b.HasIndex("VariantId");

                    b.ToTable("LampshadeNorms");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.LampshadeVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LampshadeVariants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Opal",
                            ShortName = ""
                        },
                        new
                        {
                            Id = 2,
                            Name = "Opal Mat",
                            ShortName = "M"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Opal Alabaster",
                            ShortName = "AL"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Opal Falbanka",
                            ShortName = "FA"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jasny",
                            ShortName = "J"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jasny Kier",
                            ShortName = "J-KR"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Jasny Pladry",
                            ShortName = "J-PL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jasny Antiko",
                            ShortName = "J-AC"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Jasny Alabaster",
                            ShortName = "J-AL"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jasny Mat",
                            ShortName = "J-M"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Jasny Mrożony",
                            ShortName = "J-MR"
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("Hash")
                        .HasColumnType("longtext");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityLossDelta")
                        .HasColumnType("int");

                    b.Property<int>("QuantityNetDelta")
                        .HasColumnType("int");

                    b.Property<int>("QuantityToImproveDelta")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ErrorCodeId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.OrderForProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OriginalNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("OrdersForProduction");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.OrderPositionForProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OrderPositionLp")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductSymbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("QuantityInStock")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderPositionsForProduction");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("HeadsOfMetallurgicalTeamsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadsOfMetallurgicalTeamsId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("StatusId");

                    b.ToTable("ProductionPlans", t =>
                        {
                            t.HasCheckConstraint("CK_ProductionPlans_Team_Range", "`Team` BETWEEN 1 AND 3");
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlanPositions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DocumentPositionId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<int>("ProductionPlanId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentPositionId");

                    b.HasIndex("ProductionPlanId");

                    b.ToTable("ProductionPlanPositions");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hutmustrz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hutnik"
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ShiftNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftSupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftSupervisorId");

                    b.ToTable("Shifts", t =>
                        {
                            t.HasCheckConstraint("CK_Shifts_ShiftNumber_Range", "`ShiftNumber` BETWEEN 1 AND 3");
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Otwarty",
                            Priority = 10
                        },
                        new
                        {
                            Id = 2,
                            Name = "Anulowany",
                            Priority = 20
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zamknięty",
                            Priority = 30
                        },
                        new
                        {
                            Id = 4,
                            Name = "Anulowany",
                            Priority = 40
                        },
                        new
                        {
                            Id = 5,
                            Name = "Zakończony",
                            Priority = 50
                        },
                        new
                        {
                            Id = 6,
                            Name = "Zarchiwizowany",
                            Priority = 60
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 10, 13, 41, 22, 912, DateTimeKind.Unspecified).AddTicks(1797),
                            Email = "admin@gmail.com",
                            Hash = "admin",
                            LastName = "Admin",
                            Login = "admin",
                            Name = "Admin",
                            Password = "$2a$11$VbhpyFR6tO8vDLkL..j9..xJIhdNY7qjF/Mqsn9k9NiEDlaIsh6ji",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Warehouses", t =>
                        {
                            t.HasCheckConstraint("CK_Warehouses_Code_MinLength", "LENGTH(`Code`) >= 1");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "M",
                            Name = "Magazyn"
                        },
                        new
                        {
                            Id = 2,
                            Code = "P",
                            Name = "Produkcja"
                        });
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.CustomerLampshade", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Lampshade", "Lampshade")
                        .WithMany()
                        .HasForeignKey("LampshadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.LampshadeNorm", "LampshadeNorm")
                        .WithMany()
                        .HasForeignKey("LampshadeNormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Lampshade");

                    b.Navigation("LampshadeNorm");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Document", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.DocumentsDefinition", "DocumentsDefinition")
                        .WithMany()
                        .HasForeignKey("DocumentsDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Client", "LockedBy")
                        .WithMany()
                        .HasForeignKey("LockedById");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.OrderForProduction", "Order")
                        .WithMany("Documents")
                        .HasForeignKey("OrderId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.ProductionPlanPositions", "ProductionPlanPositions")
                        .WithMany("Kwit")
                        .HasForeignKey("ProductionPlanPositionsId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentsDefinition");

                    b.Navigation("LockedBy");

                    b.Navigation("Operator");

                    b.Navigation("Order");

                    b.Navigation("ProductionPlanPositions");

                    b.Navigation("Status");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentItemRelationships", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "ParentDocument")
                        .WithMany()
                        .HasForeignKey("ParentDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.DocumentPositions", "ParentPosition")
                        .WithMany()
                        .HasForeignKey("ParentPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "SubordinateDocument")
                        .WithMany()
                        .HasForeignKey("SubordinateDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.DocumentPositions", "SubordinatePosition")
                        .WithMany()
                        .HasForeignKey("SubordinatePositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentDocument");

                    b.Navigation("ParentPosition");

                    b.Navigation("SubordinateDocument");

                    b.Navigation("SubordinatePosition");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentPositions", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "Document")
                        .WithMany("DocumentPositions")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Lampshade", "Lampshade")
                        .WithMany()
                        .HasForeignKey("LampshadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.LampshadeNorm", "LampshadeNorm")
                        .WithMany()
                        .HasForeignKey("LampshadeNormId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.OrderPositionForProduction", "OrderPositionForProduction")
                        .WithMany()
                        .HasForeignKey("OrderPositionForProductionId");

                    b.Navigation("Document");

                    b.Navigation("Lampshade");

                    b.Navigation("LampshadeNorm");

                    b.Navigation("Operator");

                    b.Navigation("OrderPositionForProduction");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentRelations", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "ParentDocument")
                        .WithMany()
                        .HasForeignKey("ParentDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "SubordinateDocument")
                        .WithMany()
                        .HasForeignKey("SubordinateDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentDocument");

                    b.Navigation("SubordinateDocument");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.KwitLack", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "Kwit")
                        .WithMany()
                        .HasForeignKey("KwitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Error", "Lack")
                        .WithMany()
                        .HasForeignKey("LackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kwit");

                    b.Navigation("Lack");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.LampshadeNorm", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Lampshade", "Lampshade")
                        .WithMany()
                        .HasForeignKey("LampshadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.LampshadeVariant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lampshade");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Log", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Operation", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Error", "ErrorCode")
                        .WithMany()
                        .HasForeignKey("ErrorCodeId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Document");

                    b.Navigation("ErrorCode");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.OrderForProduction", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.OrderPositionForProduction", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.OrderForProduction", "Order")
                        .WithMany("OrderPosition")
                        .HasForeignKey("OrderId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Lampshade", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlan", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "HeadsOfMetallurgicalTeams")
                        .WithMany()
                        .HasForeignKey("HeadsOfMetallurgicalTeamsId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadsOfMetallurgicalTeams");

                    b.Navigation("Shift");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlanPositions", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.DocumentPositions", "DocumentPosition")
                        .WithMany("ProductionPlanPositions")
                        .HasForeignKey("DocumentPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luzyce.Api.Db.AppDb.Models.ProductionPlan", "ProductionPlan")
                        .WithMany("Positions")
                        .HasForeignKey("ProductionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentPosition");

                    b.Navigation("ProductionPlan");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Shift", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.User", "ShiftSupervisor")
                        .WithMany()
                        .HasForeignKey("ShiftSupervisorId");

                    b.Navigation("ShiftSupervisor");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.User", b =>
                {
                    b.HasOne("Luzyce.Api.Db.AppDb.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.Document", b =>
                {
                    b.Navigation("DocumentPositions");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.DocumentPositions", b =>
                {
                    b.Navigation("ProductionPlanPositions");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.OrderForProduction", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("OrderPosition");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlan", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Luzyce.Api.Db.AppDb.Models.ProductionPlanPositions", b =>
                {
                    b.Navigation("Kwit");
                });
#pragma warning restore 612, 618
        }
    }
}
